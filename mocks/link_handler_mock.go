// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// LinkHandlerMock is an autogenerated mock type for the LinkHandler type
type LinkHandlerMock struct {
	mock.Mock
}

type LinkHandlerMock_Expecter struct {
	mock *mock.Mock
}

func (_m *LinkHandlerMock) EXPECT() *LinkHandlerMock_Expecter {
	return &LinkHandlerMock_Expecter{mock: &_m.Mock}
}

// CreateLink provides a mock function with given fields: w, r
func (_m *LinkHandlerMock) CreateLink(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// LinkHandlerMock_CreateLink_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateLink'
type LinkHandlerMock_CreateLink_Call struct {
	*mock.Call
}

// CreateLink is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
func (_e *LinkHandlerMock_Expecter) CreateLink(w interface{}, r interface{}) *LinkHandlerMock_CreateLink_Call {
	return &LinkHandlerMock_CreateLink_Call{Call: _e.mock.On("CreateLink", w, r)}
}

func (_c *LinkHandlerMock_CreateLink_Call) Run(run func(w http.ResponseWriter, r *http.Request)) *LinkHandlerMock_CreateLink_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request))
	})
	return _c
}

func (_c *LinkHandlerMock_CreateLink_Call) Return() *LinkHandlerMock_CreateLink_Call {
	_c.Call.Return()
	return _c
}

func (_c *LinkHandlerMock_CreateLink_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request)) *LinkHandlerMock_CreateLink_Call {
	_c.Run(run)
	return _c
}

// GetShortURLs provides a mock function with given fields: w, r
func (_m *LinkHandlerMock) GetShortURLs(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// LinkHandlerMock_GetShortURLs_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetShortURLs'
type LinkHandlerMock_GetShortURLs_Call struct {
	*mock.Call
}

// GetShortURLs is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
func (_e *LinkHandlerMock_Expecter) GetShortURLs(w interface{}, r interface{}) *LinkHandlerMock_GetShortURLs_Call {
	return &LinkHandlerMock_GetShortURLs_Call{Call: _e.mock.On("GetShortURLs", w, r)}
}

func (_c *LinkHandlerMock_GetShortURLs_Call) Run(run func(w http.ResponseWriter, r *http.Request)) *LinkHandlerMock_GetShortURLs_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request))
	})
	return _c
}

func (_c *LinkHandlerMock_GetShortURLs_Call) Return() *LinkHandlerMock_GetShortURLs_Call {
	_c.Call.Return()
	return _c
}

func (_c *LinkHandlerMock_GetShortURLs_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request)) *LinkHandlerMock_GetShortURLs_Call {
	_c.Run(run)
	return _c
}

// RedirectLink provides a mock function with given fields: w, r
func (_m *LinkHandlerMock) RedirectLink(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// LinkHandlerMock_RedirectLink_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'RedirectLink'
type LinkHandlerMock_RedirectLink_Call struct {
	*mock.Call
}

// RedirectLink is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
func (_e *LinkHandlerMock_Expecter) RedirectLink(w interface{}, r interface{}) *LinkHandlerMock_RedirectLink_Call {
	return &LinkHandlerMock_RedirectLink_Call{Call: _e.mock.On("RedirectLink", w, r)}
}

func (_c *LinkHandlerMock_RedirectLink_Call) Run(run func(w http.ResponseWriter, r *http.Request)) *LinkHandlerMock_RedirectLink_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request))
	})
	return _c
}

func (_c *LinkHandlerMock_RedirectLink_Call) Return() *LinkHandlerMock_RedirectLink_Call {
	_c.Call.Return()
	return _c
}

func (_c *LinkHandlerMock_RedirectLink_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request)) *LinkHandlerMock_RedirectLink_Call {
	_c.Run(run)
	return _c
}

// NewLinkHandlerMock creates a new instance of LinkHandlerMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewLinkHandlerMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *LinkHandlerMock {
	mock := &LinkHandlerMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
